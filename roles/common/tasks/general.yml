---

- name:             create 700 directories in ~root
  file:             path=/root/{{ item }} state=directory mode=0700
  with_items:       '{{ root_folders }}'
  when:             root_folders is defined

- name:             create directories in /opt + /root/cache
  file:             path={{ item }} state=directory mode=0755
  with_items:       '{{ default_folders }}'
  when:             default_folders is defined

- name:             set FQDN - localhost
  lineinfile:       dest=/etc/hosts regexp='^127\.0\.0\.1' line='127.0.0.1 localhost' owner=root group=root mode=0644

- name:             set example.com FQDN - hostname
  lineinfile:       dest=/etc/hosts insertafter='^127\.0\.0\.1' line='127.0.1.1 {{ ansible_hostname }}.example.com {{ ansible_hostname }} netdata.me' owner=root group=root mode=0644
  when:             ansible_virtualization_type == "virtualbox"

- name:             set default_servername as FQDN - hostname
  lineinfile:       dest=/etc/hosts insertafter='^127\.0\.0\.1' line='127.0.1.1 {{ default_servername }} {{ ansible_hostname }} netdata.me' owner=root group=root mode=0644
  when:             ansible_virtualization_type != "virtualbox"

- name:             link ack to ack-grep
  file:             path=/usr/local/bin/ack src=/usr/bin/ack-grep state=link force=yes

- name:             place /etc/prompt.bash
  copy:             dest=/etc/prompt.bash src=prompt.bash mode=0644

- name:             check /etc/resolv.conf
  stat:             path=/etc/resolv.conf
  register:         resolv_check

- name:             delete /etc/resolv.conf if it's a symlink
  file:             path=/etc/resolv.conf state=absent
  when:             resolv_check.stat.islnk is defined and resolv_check.stat.islnk

- name:             copy our resolv.conf
  copy:             dest=/etc/resolv.conf src=resolv.conf.google mode=0644
  when:             resolv_check.stat.islnk is defined and resolv_check.stat.islnk

- name:             place /etc/rc.local
  template:         dest=/etc/rc.local src=rc.local.j2 mode=0755

- name:             fix stock sshd_config in trusty (add EOF..)
  shell:            'test "$( tail -c1 /etc/ssh/sshd_config )" = "" || echo >> /etc/ssh/sshd_config'
  changed_when:     false

- name:             update ssh parameters
  lineinfile:       dest=/etc/ssh/sshd_config
                    state=present
                    regexp="^[#]?{{ item.key }}"
                    line="{{ item.key }} {{ item.value }}"
                    insertafter=EOF
                    backrefs=yes
  with_items:
    - { key: 'PermitRootLogin', value: 'no' }
    - { key: 'LoginGraceTime', value: '120' }
    - { key: 'TCPKeepAlive', value: 'yes' }
    - { key: 'X11Forwarding', value: 'yes' }
    - { key: 'ClientAliveInterval', value: '60' }
    - { key: 'PasswordAuthentication', value: 'yes' }
  notify:
    - restart ssh
