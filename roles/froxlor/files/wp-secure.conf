# wp-secure.conf
#
#
# This file includes common security considerations for wordpress using nginx.
#
# The goal is to block actions which are usually dangerous to wordpress.
# Additionally, we block direct access to PHP files and folders which should not 
# be accessed directly from a browser.
#
# Also have included exceptions for plugins that are known to require this access.

# allow AJAX requests in themes and plugins
location ~ ^/wp-admin/admin-ajax.php$ {
    allow all;
    try_files $uri $uri/ @php;
}

#Deny access to wp-content folders for suspicious files
location ~* ^/(wp-content)/(.*?)\.(zip|gz|tar|bzip2|7z)\$ { deny all; }
location ~ ^/wp-content/uploads/sucuri { deny all; }
location ~ ^/wp-content/updraft { deny all; }

# Deny access to any files with a .php extension in the uploads directory
location ~* /(?:uploads|files)/.*\.php\$ {
    deny all;
}

# Deny access to uploads that arenâ€™t images, videos, music, etc.
location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf|css)$ {
    deny all;
}

# Whitelist Exception for https://wordpress.org/plugins/woocommerce/
location ~ ^/wp-content/plugins/woocommerce/ {
    try_files $uri $uri/ @php;
}

# Whitelist Exception for https://wordpress.org/plugins/woocommerce-csvimport/
location ~ ^/wp-content/plugins/woocommerce-csvimport/ {
    try_files $uri $uri/ @php;
}

# Block PHP files in uploads, content, and includes directory.
location ~* /(?:uploads|files|wp-content|wp-includes)/.*\.(html|htm|shtml|php)\$ {
    try_files $uri $uri/ @php;
}

# Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
location ~* \.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)\$|^(\..*|Entries.*|Repository|Root|Tag|Template)\$|\.php_
{
    return 444;
}

# nocgi
location ~* \.(pl|cgi|py|sh|lua)\$ {
   return 444;
}

# disallow
location ~* (w00tw00t) {
   return 444;
}


location ~* /(\.|wp-config\.php|wp-config\.txt|wp-settings\.php|changelog\.txt|readme\.txt|readme\.html|license\.txt) { deny all; }

# Deny, drop, or internal locations
location ~ /\. { access_log off; log_not_found off; deny all; }
location ~ ~$ { access_log off; log_not_found off; deny all; }
location = /robots.txt { access_log off; log_not_found off; }
location ^~ favicon { access_log off; log_not_found off; }
location ^~ /conf/ { internal; }

# Taking advantage of browser caching for static stuff
location ~* \.(js|css|png|jpg|jpeg|gif|ico|eot|woff|ttf|svg)$ {
    expires max;
    log_not_found off;
}

# Mark all of these directories as "internal", which means that they cannot
# be explicitly accessed by clients. However, the web server can still use
# and serve the files inside of them. This keeps people from poking around
# in the wiki's internals.
location ^~ /bin/ { internal; }
location ^~ /docs/ { internal; }
location ^~ /extensions/ { internal; }
location ^~ /includes/ { internal; }
location ^~ /maintenance/ { internal; }
location ^~ /resources/ { internal; } # Breaks Default Logo (mv logo to images)
location ^~ /serialized/ { internal; }
location ^~ /tests/ { internal; }
location ^~ /skins/ { internal; }
location ^~ /vendor/ { internal; }
