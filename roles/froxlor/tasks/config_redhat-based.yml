---

- name:             fetch server IP
  shell:            ifconfig | egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}' | egrep -v '255|10|(127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})' | head -n1
  register:         frox_ip
  failed_when:      false
  changed_when:     false

- name:             set facts specific to redhat-based distros
  set_fact:
    scl_mariadb:   "scl enable rh-mariadb102 --"
    frox_mysql_socket: "/var/lib/mysql/mysql.sock"
    frox_httpd_user:  nginx
    frox_httpd_group: nginx

- name:             disable check-files configs in nscd
  lineinfile:       path=/etc/nscd.conf
                    state=present
                    backrefs=yes
                    regexp=^{{ item.key }}
                    line="{{ item.key }}{{ item.value }}"
  with_items:
    - { key: "\tcheck-files\t\tpasswd\t\t", value: 'no' }
    - { key: "\tcheck-files\t\tgroup\t\t", value: 'no' }
    - { key: "\tcheck-files\t\thosts\t\t", value: 'no' }
    - { key: "\tcheck-files\t\tservices\t", value: 'no' }
    - { key: "\tenable-cache\t\tnetgroup\t", value: 'no' }
    - { key: "\tcheck-files\t\tnetgroup\t", value: 'no' }
  notify:
    - restart nscd

- name:             create /etc/nginx/conf-enabled/ when ssl is enabled
  file:             path=/etc/nginx/conf-enabled/ state=directory owner=root group=root mode=0755
  when:             frox_use_ssl == true

- name:             template /etc/nginx/conf-enabled/acme.conf when ssl is enabled
  template:
    src:            acme.conf.j2
    dest:           /etc/nginx/conf-enabled/acme.conf
    owner:          root
    group:          root
    mode:           0644
  when:             frox_use_ssl == true

- name:             template /etc/libnss-mysql.cfg
  template:
    src:            libnss-mysql.cfg.j2
    dest:           /etc/libnss-mysql.cfg
    owner:          nscd
    group:          nscd
    mode:           0600
    backup:         yes
  notify:           restart nscd

- name:             template /etc/libnss-mysql-root.cfg
  template:
    src:            libnss-mysql-root.cfg.j2
    dest:           /etc/libnss-mysql-root.cfg
    owner:          nscd
    group:          nscd
    mode:           0600
    backup:         yes
  notify:           restart nscd

- name:             copy /etc/nsswitch.conf
  copy:
    src:            nsswitch.conf
    dest:           /etc/nsswitch.conf
    owner:          root
    group:          root
    mode:           0644
    backup:         yes

- name:             template /etc/nginx/sites-available/_default.conf
  template:
    src:            nginx.default.conf.j2
    dest:           /etc/nginx/sites-available/_default.conf
    owner:          root
    group:          root
    mode:           0664
  notify:           restart nginx

- name:             template /etc/opt/remi/php72/default.conf
  template:
    src:            php-fpm.default.conf.j2
    dest:           /etc/opt/remi/php72/default.conf
    owner:          root
    group:          root
    mode:           0664
  notify:           restart php-fpm

- name:             update /etc/opt/remi/php72/php-fpm.conf to load default.conf
  lineinfile:       dest=/etc/opt/remi/php72/php-fpm.conf
                    insertafter='^include=/etc/opt/remi/php72/php-fpm.d/*.conf'
                    line='include=/etc/opt/remi/php72/default.conf'
                    state=present
  notify:           restart php-fpm

- name:             create systemd folders
  file:
    path:  "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode:  "{{ item.mode }}"
  with_items:
    - { owner: "root", group: "root", path: "/etc/systemd/system/rh-mariadb102-mariadb.service.d", mode: "0755" }
    - { owner: "root", group: "root", path: "/etc/systemd/system/nginx.service.d", mode: "0755" }
    - { owner: "root", group: "root", path: "/etc/systemd/system/php72-php-fpm.service.d", mode: "0755" }

- name:             place systemd override configs
  template:
    src:           "{{ item.template }}"
    dest:          "/etc/systemd/system/{{ item.service }}.service.d/override.conf"
    owner:          root
    group:          root
    mode:           0644
  with_items:
    - { service: "rh-mariadb102-mariadb", template: "systemd_redhat_rh-mariadb102-mariadb_override.conf.j2" }
    - { service: "nginx", template: "systemd_redhat_nginx_override.conf.j2" }
    - { service: "php72-php-fpm", template: "systemd_redhat_php72-php-fpm_override.conf.j2" }

- name:             template updates.sql
  template:
    src:            updates.sql.j2
    dest:           /root/tmp/updates.sql
    owner:          root
    group:          root
    mode:           0600
  when:             froxlor_check.stat.exists == false

- name:             apply updates.sql
  shell:           "{{ scl_mariadb }} mysql -BN {{ frox_mysql_db }} < /root/tmp/updates.sql"
  when:             froxlor_check.stat.exists == false

- name:             remove our froxlor vhost config
  file:
    path:           "{{ frox_vhostpath }}/_froxlor.conf"
    state:          absent

- name:             template /var/www/froxlor/scripts/froxlor_master_cronjob.php
  template:
    src:            froxlor_master_cronjob.php.j2
    dest:           /var/www/froxlor/scripts/froxlor_master_cronjob.php
    owner:          froxlocal
    group:          froxlocal
    mode:           0664
    backup:         yes

- name:             force run froxlor cronjob to finalize
  shell:            php /var/www/froxlor/scripts/froxlor_master_cronjob.php --force
  when:             froxlor_check.stat.exists == false
  notify:           restart nginx
