---

- name:             template /etc/libnss-mysql.cfg
  template:
    src:            libnss-mysql.cfg.j2
    dest:           /etc/libnss-mysql.cfg
    owner:          root
    group:          root
    mode:           0600
    backup:         yes
  notify:           restart nscd

- name:             template /etc/libnss-mysql-root.cfg
  template:
    src:            libnss-mysql-root.cfg.j2
    dest:           /etc/libnss-mysql-root.cfg
    owner:          root
    group:          root
    mode:           0600
    backup:         yes
  notify:           restart nscd

- name:             copy /etc/nsswitch.conf
  copy:
    src:            nsswitch.conf
    dest:           /etc/nsswitch.conf
    owner:          root
    group:          root
    mode:           0644
    backup:         yes
  notify:           restart nscd

- name:             update service startup scripts
  lineinfile:       dest="/etc/init.d/{{ item.service }}"
                    state=present
                    regexp=^{{ item.key }}
                    line="{{ item.key }}    {{ item.value }}"
                    insertafter=EOF backrefs=yes
  with_items:
    - { service: 'php7.2-fpm', key: '# Required-Start:', value: '$remote_fs $network mysql nscd' }
    - { service: 'nscd', key: '# Required-Start:', value: '$remote_fs $syslog $network mysql' }
  when:             ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name:             create systemd folder for mariadb (redhat based)
  file:
    path:  "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode:  "{{ item.mode }}"
  with_items:
    - { owner: "root", group: "root", path: "/etc/systemd/system/rh-mariadb102-mariadb.service.d", mode: "0755" }
  when:             ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name:             place systemd override for mariadb (redhat based)
  template:
    src:            rh-mariadb102-mariadb_override.conf
    dest:           /etc/systemd/system/rh-mariadb102-mariadb.service.d/override.conf
    owner:          root
    group:          root
    mode:           0644
  when:             ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name:             set fact to prepend for shell commands during configure
  set_fact:
    scl_mariadb:   "scl enable rh-mariadb102 --"
  when:             ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

- name:             set fact to prepend for shell commands during configure
  set_fact:
    scl_mariadb:   " "
  when:             ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name:             template updates.sql
  template:
    src:            updates.sql.j2
    dest:           /root/tmp/updates.sql
    owner:          root
    group:          root
    mode:           0600
  when:             froxlor_check.stat.exists == false

- name:             apply updates.sql
  shell:           "{{ scl_mariadb }} mysql -BN {{ frox_mysql_db }} < /root/tmp/updates.sql"
  when:             froxlor_check.stat.exists == false

- name:             remove our froxlor vhost config
  file:
    path:           "{{ frox_vhostpath }}/_froxlor.conf"
    state:          absent

- name:             force run froxlor cronjob to finalize
  shell:            php /var/www/froxlor/scripts/froxlor_master_cronjob.php --force
  when:             froxlor_check.stat.exists == false
  notify:           restart nginx

